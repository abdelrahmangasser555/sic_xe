import { OPCODES } from "@/features/create_your_own/components/constants";

export const instructionSet = [
  {
    mnemonic: "FIX",
    format: [1],
    size: 1,
    opcode: "C4",
    description: "Convert floating-point to integer",
  },
  {
    mnemonic: "FLOAT",
    format: [1],
    size: 1,
    opcode: "C0",
    description: "Convert integer to floating-point",
  },
  {
    mnemonic: "HIO",
    format: [1],
    size: 1,
    opcode: "F4",
    description: "Halt I/O",
  },
  {
    mnemonic: "NORM",
    format: [1],
    size: 1,
    opcode: "C8",
    description: "Normalize",
  },
  {
    mnemonic: "SIO",
    format: [1],
    size: 1,
    opcode: "F0",
    description: "Start I/O",
  },
  {
    mnemonic: "TIO",
    format: [1],
    size: 1,
    opcode: "F8",
    description: "Test I/O",
  },

  // Format 2: 2 bytes
  {
    mnemonic: "ADDR",
    format: [2],
    size: 2,
    opcode: "90",
    description: "Add registers",
  },
  {
    mnemonic: "CLEAR",
    format: [2],
    size: 2,
    opcode: "B4",
    description: "Clear register",
  },
  {
    mnemonic: "COMPR",
    format: [2],
    size: 2,
    opcode: "A0",
    description: "Compare registers",
  },
  {
    mnemonic: "DIVR",
    format: [2],
    size: 2,
    opcode: "9C",
    description: "Divide registers",
  },
  {
    mnemonic: "MULR",
    format: [2],
    size: 2,
    opcode: "98",
    description: "Multiply registers",
  },
  {
    mnemonic: "RMO",
    format: [2],
    size: 2,
    opcode: "AC",
    description: "Register move",
  },
  {
    mnemonic: "SHIFTL",
    format: [2],
    size: 2,
    opcode: "A4",
    description: "Shift left",
  },
  {
    mnemonic: "SHIFTR",
    format: [2],
    size: 2,
    opcode: "A8",
    description: "Shift right",
  },
  {
    mnemonic: "SUBR",
    format: [2],
    size: 2,
    opcode: "94",
    description: "Subtract registers",
  },
  {
    mnemonic: "TIXR",
    format: [2],
    size: 2,
    opcode: "B8",
    description: "Test index register",
  },

  // Format 3/4: 3 or 4 bytes
  {
    mnemonic: "ADD",
    format: [3, 4],
    size: 3,
    opcode: "18",
    description: "Add",
  },
  {
    mnemonic: "AND",
    format: [3, 4],
    size: 3,
    opcode: "40",
    description: "And",
  },
  {
    mnemonic: "COMP",
    format: [3, 4],
    size: 3,
    opcode: "28",
    description: "Compare",
  },
  {
    mnemonic: "DIV",
    format: [3, 4],
    size: 3,
    opcode: "24",
    description: "Divide",
  },
  { mnemonic: "J", format: [3, 4], size: 3, opcode: "3C", description: "Jump" },
  {
    mnemonic: "JEQ",
    format: [3, 4],
    size: 3,
    opcode: "30",
    description: "Jump Equal",
  },
  {
    mnemonic: "JGT",
    format: [3, 4],
    size: 3,
    opcode: "34",
    description: "Jump Greater",
  },
  {
    mnemonic: "JLT",
    format: [3, 4],
    size: 3,
    opcode: "38",
    description: "Jump Less",
  },
  {
    mnemonic: "JSUB",
    format: [3, 4],
    size: 3,
    opcode: "48",
    description: "Jump to Subroutine",
  },
  {
    mnemonic: "LDA",
    format: [3, 4],
    size: 3,
    opcode: "00",
    description: "Load Accumulator",
  },
  {
    mnemonic: "LDCH",
    format: [3, 4],
    size: 3,
    opcode: "50",
    description: "Load Character",
  },
  {
    mnemonic: "LDL",
    format: [3, 4],
    size: 3,
    opcode: "08",
    description: "Load Linkage Register",
  },
  {
    mnemonic: "LDX",
    format: [3, 4],
    size: 3,
    opcode: "04",
    description: "Load Index Register",
  },
  {
    mnemonic: "STA",
    format: [3, 4],
    size: 3,
    opcode: "0C",
    description: "Store Accumulator",
  },
  {
    mnemonic: "STCH",
    format: [3, 4],
    size: 3,
    opcode: "54",
    description: "Store Character",
  },
  {
    mnemonic: "STL",
    format: [3, 4],
    size: 3,
    opcode: "14",
    description: "Store Linkage Register",
  },
  {
    mnemonic: "STX",
    format: [3, 4],
    size: 3,
    opcode: "10",
    description: "Store Index Register",
  },
  {
    mnemonic: "SUB",
    format: [3, 4],
    size: 3,
    opcode: "1C",
    description: "Subtract",
  },
  {
    mnemonic: "TD",
    format: [3, 4],
    size: 3,
    opcode: "E0",
    description: "Test Device",
  },
  {
    mnemonic: "TIX",
    format: [3, 4],
    size: 3,
    opcode: "2C",
    description: "Test Index",
  },
  {
    mnemonic: "WD",
    format: [3, 4],
    size: 3,
    opcode: "DC",
    description: "Write Device",
  },
  {
    mnemonic: "RSUB",
    format: [3, 4],
    size: 3,
    opcode: "4C",
    description: "pc <-- (l)",
  },
  {
    mnemonic: "LDB",
    format: [3, 4],
    size: 3,
    opcode: "4C",
    description: "Write Device",
  },
  {
    mnemonic: "BASE",
    format: [3, 4],
    size: 3,
    opcode: "00",
    description: "Base Register",
  },
  {
    mnemonic: "TARGET",
    format: [3, 4],
    size: 3,
    opcode: "00",
    description: "Target Address",
  },
  {
    mnemonic: "NEXT",
    format: [3, 4],
    size: 3,
    opcode: "00",
    description: "Next Address",
  },
  {
    mnemonic: "END",
    format: [0],
    size: 0,
    opcode: "00",
    description: "End of program",
  },
  {
    mnemonic: "WORD",
    format: [0],
    size: 0,
    opcode: "00",
    description: "Word directive",
  },
  {
    mnemonic: "BYTE",
    format: [0],
    size: 0,
    opcode: "00",
    description: "Byte directive",
  },
  {
    mnemonic: "RESW",
    format: [0],
    size: 0,
    opcode: "00",
    description: "Reserve word",
  },
  {
    mnemonic: "RESB",
    format: [0],
    size: 0,
    opcode: "00",
    description: "Reserve byte",
  },
  {
    mnemonic: "LDS",
    format: [3, 4],
    size: 3,
    opcode: "6C",
    description: "Load Stack Pointer",
  },
  {
    mnemonic: "NUM",
    format: [3],
    size: 3,
    opcode: "00",
    description: "Numeric literal",
  },
];

export const instructionMnemonics = [
  "FIX",
  "FLOAT",
  "HIO",
  "NORM",
  "SIO",
  "TIO",
  "ADDR",
  "CLEAR",
  "COMPR",
  "DIVR",
  "MULR",
  "RMO",
  "SHIFTL",
  "SHIFTR",
  "SUBR",
  "TIXR",
  "ADD",
  "AND",
  "COMP",
  "DIV",
  "J",
  "JEQ",
  "JGT",
  "JLT",
  "JSUB",
  "LDA",
  "LDCH",
  "LDL",
  "LDX",
  "MUL",
  "OR",
  "RD",
  "RSUB",
  "STA",
  "STCH",
  "STL",
  "STSW",
  "STX",
  "SUB",
  "TD",
  "TIX",
  "WD",

  "BASE",
  "LDB",
  "TARGET",
  "NEXT",
  "WORD",
  "LDS",
  "NUM",
];
